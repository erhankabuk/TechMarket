@model HomeViewModel
@{
    ViewData["Title"] = "Home Page";
}

<h1>Products</h1>

<div class="card">
    <form id="frmFilters" class="card-body form-inline p-2 bg-light">
        <label>Category</label>
        <select class="form-control ml-sm-2" asp-items="Model.Categories" asp-for="CategoryId">
            <option value="">All</option>
        </select>
        <label class="ml-sm-3">Brand</label>
        <select class="form-control ml-sm-2" asp-items="Model.Brands" asp-for="BrandId">
            <option value="">All</option>
        </select>
    </form>
</div>

<div class="row">
    @foreach (var item in Model.Products)
    {
        <div class="col-6 col-md-4 col-lg-3">
            <div class="card mb-4">
                <div class="mt-3 mx-3">
                    <img src="~/uploads/products/@item.PictureUri" class="card-img-top" alt="...">
                </div>
                <div class="card-body">
                    <div class="product-title" title="@item.Name">@item.Name</div>
                    <div class="d-flex justify-content-between align-items-baseline ">
                        <span>@item.PriceText</span>
                        <a href="#" class="btn btn-success" data-add-to-basket="@item.Id">
                            <i class="fas fa-cart-plus"></i>
                        </a>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

<nav class="mt-2">
    <ul class="pagination justify-content-center">
        <li class="page-item @(!Model.PaginationInfo.HasPrevious ? "invisible" : "")">
            @{ await PageLink(Model.PaginationInfo.CurrentPage - 1, "&laquo;"); }
        </li>

        @foreach (int i in Model.PaginationInfo.PageNumbers)
        {
            if (i == -1)
            {
                <li class="page-item disabled">
                    <a class="page-link" href="#">&hellip;</a>
                </li>
            }
            else
            {
                <li class="page-item @(i == Model.PaginationInfo.CurrentPage ? "active" : "")">
                    @{ await PageLink(i, i.ToString()); }
                </li>
            }
        }
        <li class="page-item @(!Model.PaginationInfo.HasNext ? "invisible" : "")">
            @{ await PageLink(Model.PaginationInfo.CurrentPage + 1, "&raquo;"); }
        </li>
    </ul>
</nav>


@section Scripts{
    <script>
        $("[data-add-to-basket]").click(function (event) {
            event.preventDefault();
            var productId = $(this).data("add-to-basket");
            $.ajax({
                type: "POST",
                url: "@Url.Action("AddItem","Basket")",
                data: { productId: productId },
                success: function (data) {
                    $(".nav-basket-items-counts").text(data);
                    toastr.success("Added to cart.");
                }
            })
        })
     
        $("#frmFilters").change(function () {
            this.submit();
        })
    </script>

}
@{
    async Task PageLink(int pageNo, string text)
    {
        <a class="page-link" asp-route-page="@pageNo" asp-route-CategoryId="@Model.CategoryId" asp-route-BrandId="@Model.BrandId">@Html.Raw(text)</a>
    }
}






